name: Build kernel for munch flavor

# FIXME: allow specify url
env:
  CLANG_URL: 'https://raw.githubusercontent.com/v3kt0r-87/Clang-Stable/main/clang-weebx-beta.txt'

on:
  push:
    branches: 'munch'
  workflow_dispatch:

permissions:
  contents: read

jobs:     
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build-flavor: ['MIUI', 'AOSP']
    steps:
      - uses: actions/checkout@v4

      - name: Get clang latest url (weebx-clang-beta)
        id: clang-url
        run: |
          echo "key=$(curl -s ${{ env.CLANG_URL }})" >> $GITHUB_OUTPUT

      - name: Cache toolchain
        id: cache-clang
        uses: actions/cache@v4
        with:
          path: ../clang/
          keys: ${{ steps.clang-url.outputs.key }}

      - name: Download Clang
        if: steps.cache-clang.outputs.cache-hit != 'true'
        run: |
          CLANG_URL="${{ steps.clang-url.outputs.key }}"
          ARCHIVE_NAME="weebx-clang-beta.tar.gz"
          pushd ..
            wget -nv "$CLANG_URL" -O "$ARCHIVE_NAME"
            mkdir clang
            tar xvf "$ARCHIVE_NAME" -C clang
            rm -f "$ARCHIVE_NAME"
          popd

      - name: Save Toolchain if not cached
        if: steps.cache-clang.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: ../clang/
          key: ${{ steps.clang-url.outputs.key }}
          
      - name: Build ${{ matrix.build-flavor }}
        run: |
          case "${{ matrix.build-flavor }}"
          in
            "MIUI")
              echo 1 | bash munch.sh
            ;;
            *)
              echo 2 | bash munch.sh
            ;;
          esac

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: RealKing-munch-${{ matrix.build-flavor }}
          path: '${{ github.workspace }}/RealKing-Munch-${{ matrix.build-flavor }}*.zip'
      
